// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.6.0
//     Build date: 2021-08-24 12:36:19 EDT
//     on: 2021-08-24, 16:36:21 UTC
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   RCS Business Messaging API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/rcs-business-messaging/rest'>RCS Business Messaging API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/rcs-business-messaging/rest'>
 *              https://developers.google.com/rcs-business-messaging/rest</a>
 *      <tr><th>Discovery Name<td>rcsbusinessmessaging
 *      <tr><th>Generated At<td>2021-08-24 16:36:21 UTC
 *      <tr><th>C# Generator<td>google-apis-code-generator
 *      <tr><th>Generator Version
 *          <td>1.6.0 / c#=1.10.0
 *      <tr><th>Generator Build<td>2021-08-24 12:36:19 EDT
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using RCS Business Messaging API can be found at
 * <a href='https://developers.google.com/rcs-business-messaging/rest'>https://developers.google.com/rcs-business-messaging/rest</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.RCSBusinessMessaging.v1.Data
{    

    /// <summary>The content of a message sent from the agent to a user.</summary>
    public class AgentContentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Information about a file, including the URL of the file and the URL of the fileâ€™s thumbnail. The
        /// RBM platform serves content from a cache, but an agent can force the RBM platform to fetch a new version of
        /// the content and refresh the cache.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentInfo")]
        public virtual ContentInfo ContentInfo { get; set; } 

        /// <summary>The unique name of a file. The RBM platform returns a file name when an agent uploads a
        /// file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>A standalone rich card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("richCard")]
        public virtual RichCard RichCard { get; set; } 

        /// <summary>A list of suggested replies and suggested actions that appear as a list of suggestion chips
        /// following the associated agent message. Maximum 11 suggestions. The chips only display when the associated
        /// agent message is the most recent message within the conversation (including both agent and user messages).
        /// The user can tap a suggested reply to send the text reply back to the agent or tap a suggested action to
        /// initiate a native action on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<Suggestion> Suggestions { get; set; } 

        /// <summary>Text encoded in UTF-8.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An event from the agent to the user.</summary>
    public class AgentEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of the agent event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventType")]
        public virtual string EventType { get; set; } 

        /// <summary>The ID of the user message that the agent event pertains to. This field is only applicable for
        /// agent events of type READ.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageId")]
        public virtual string MessageId { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating an agent event. The field
        /// resolves "phones/{E.164}/agentEvents/{eventId}", where {E.164} is the user's phone number in E.164 format
        /// and {eventId} is the agent-assigned ID of the agent event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating an agent message. The field
        /// resolves the time when the event is sent to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendTime")]
        public virtual object SendTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A message sent from the agent to a user.</summary>
    public class AgentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The content of the agent message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentMessage")]
        public virtual AgentContentMessage ContentMessage { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating an agent message. The field
        /// resolves "phones/{E.164}/agentMessages/{messageId}", where {E.164} is the user's phone number in E.164
        /// format and {messageId} is the agent-assigned ID of the agent message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating an agent message. The field
        /// resolves the time when the message is sent to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendTime")]
        public virtual object SendTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to check if users are RBM-reachable.</summary>
    public class BatchGetUsersRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentId")]
        public virtual string AgentId { get; set; } 

        /// <summary>List of users' phone numbers in E.164 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("users")]
        public virtual System.Collections.Generic.IList<string> Users { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with RBM-reachability user data.</summary>
    public class BatchGetUsersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Count of phone numbers from the randomly selected list that are RCS-reachable across all carriers,
        /// regardless of the agent's launch status. The ratio between this value and total_random_sample_user_count can
        /// approximate the potential reach for a list of users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachableRandomSampleUserCount")]
        public virtual System.Nullable<int> ReachableRandomSampleUserCount { get; set; } 

        /// <summary>List of users' phone numbers that RBM can reach. Only includes users on carriers that the agent is
        /// launched on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachableUsers")]
        public virtual System.Collections.Generic.IList<string> ReachableUsers { get; set; } 

        /// <summary>Count of phone numbers randomly selected from reachable_users. Typically, this value is ~75% of the
        /// total requested phone numbers. This value is `0` if the count of requested phone numbers is less than
        /// 500.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalRandomSampleUserCount")]
        public virtual System.Nullable<int> TotalRandomSampleUserCount { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>List of supported features by the user</summary>
    public class Capabilities : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of RBM features that this device supports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<string> Features { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Card content</summary>
    public class CardContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>(Optional) Description of the card. Maximum 2000 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>(Optional) Media (image, GIF, video) to include in the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("media")]
        public virtual Media Media { get; set; } 

        /// <summary>(Optional) List of suggestions to include in the card. Maximum 4 suggestions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<Suggestion> Suggestions { get; set; } 

        /// <summary>(Optional) Title of the card. Maximum 200 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Carousel of cards.</summary>
    public class CarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of contents for each card in the carousel. A carousel can have a minimum of 2 cards and a
        /// maximum 10 cards.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContents")]
        public virtual System.Collections.Generic.IList<CardContent> CardContents { get; set; } 

        /// <summary>The width of the cards in the carousel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardWidth")]
        public virtual string CardWidth { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message containing the content information.</summary>
    public class ContentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Publicly reachable URL of the file. The RBM platform determines the MIME type of the file from the
        /// content-type field in the HTTP headers when the platform fetches the file. The content-type field must be
        /// present and accurate in the HTTP response from the URL. Recommended maximum file size of 100 MB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileUrl")]
        public virtual string FileUrl { get; set; } 

        /// <summary>If set, the RBM platform fetches the file and thumbnail from the specified URLs, even if the
        /// platform has cached copies of the file (and/or of the thumbnail).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forceRefresh")]
        public virtual System.Nullable<bool> ForceRefresh { get; set; } 

        /// <summary>(Optional, for image and video files only) Publicly reachable URL of the thumbnail. Maximum size of
        /// 100 kB. If you don't provide a thumbnail URL, the RBM platform displays a blank placeholder thumbnail until
        /// the user's device downloads the file. Depending on the user's setting, the file may not download
        /// automatically and may require the user to tap a download button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUrl")]
        public virtual string ThumbnailUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default calendar app and starts the new calendar event flow with the agent-specified
    /// event data pre-filled.</summary>
    public class CreateCalendarEventAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Event description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Event end time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual object EndTime { get; set; } 

        /// <summary>Event start time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual object StartTime { get; set; } 

        /// <summary>Event title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request for creating file.</summary>
    public class CreateFileRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Blob file reference. This will be propagated by scotty agent automatically.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blob")]
        public virtual GdataMedia Blob { get; set; } 

        /// <summary>Optional. Text description of the file's content. Screen readers use this description to help users
        /// with disabilities understand what the file contains.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDescription")]
        public virtual string ContentDescription { get; set; } 

        /// <summary>Optional. Publicly available URL of the file. The RBM platform determines the MIME type of the file
        /// from the content-type field in the HTTP headers when fetching the file. Supported image content types:
        /// image/jpeg, image/jpg, image/gif, image/png. Supported video content types: video/h263, video/m4v,
        /// video/mp4, video/mpeg, video/mpeg4, video/webm.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileUrl")]
        public virtual string FileUrl { get; set; } 

        /// <summary>Media request info populated by Scotty server. This will be propagated by scotty agent
        /// automatically.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaRequestInfo")]
        public virtual MediaRequestInfo MediaRequestInfo { get; set; } 

        /// <summary>Optional. Publicly available URL of the thumbnail corresponding to the file. If this field is not
        /// set, then the RBM platform automatically generates a thumbnail from the file. The RBM platform determines
        /// the MIME type of the file from the content-type field in the HTTP headers when fetching the file. Supported
        /// image content types: image/jpeg, image/jpg, image/gif, image/png.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUrl")]
        public virtual string ThumbnailUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default dialer app with the agent-specified phone number filled in.</summary>
    public class DialAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The phone number in E.164 format, for example, +12223334444.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Dialogflow event triggered by the RBM Platform. With events, an agent can match an intent without using
    /// language as an input. Parameters enable personalized responses. For example, with the input `{ "eventName":
    /// "welcome_event", "parameters": { "name": "Sam" } }`, a Dialogflow agent can create the response `"Hello Sam!
    /// What can I do for you today?"`.</summary>
    public class DialogflowEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the event. For example, `RBM_WELCOME_EVENT`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventName")]
        public virtual string EventName { get; set; } 

        /// <summary>The language of this query. For a list of language codes, see Language Support. Before a Dialogflow
        /// agent can use a language, the language must be enabled in the Dialogflow console. Queries in the same
        /// session can specify different languages. If a language isn't specified, Dialogflow uses the agent's default
        /// language. do not necessarily need to specify the same language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>This field is set by the RBM platform. Don't include it when creating an agent message. The field
        /// resolves "phones/{E.164}/dialogflowMessages/{messageId}", where {E.164} is the user's phone number in E.164
        /// format and {messageId} is the agent-assigned ID of the RBM agent message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>(Optional) Parameters associated with the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance: service Foo {
    /// rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
    /// JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A file resource with a unique name that an agent can use to identify the file when sending
    /// messages.</summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Server-assigned unique name of the file resource, which an agent can use to identify the file when
        /// sending messages. The format is "files/{uid}", where {uid} is a unique ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information to read/write to blobstore2.</summary>
    public class GdataBlobstore2Info : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The blob generation id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobGeneration")]
        public virtual System.Nullable<long> BlobGeneration { get; set; } 

        /// <summary>The blob id, e.g., /blobstore/prod/playground/scotty</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobId")]
        public virtual string BlobId { get; set; } 

        /// <summary>Read handle passed from Bigstore -> Scotty for a GCS download. This is a signed, serialized
        /// blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS
        /// media downloads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("downloadReadHandle")]
        public virtual string DownloadReadHandle { get; set; } 

        /// <summary>The blob read token. Needed to read blobs that have not been replicated. Might not be available
        /// until the final call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("readToken")]
        public virtual string ReadToken { get; set; } 

        /// <summary>Metadata passed from Blobstore -> Scotty for a new GCS upload. This is a signed, serialized
        /// blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not
        /// applicable to non-GCS media uploads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadMetadataContainer")]
        public virtual string UploadMetadataContainer { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A sequence of media data references representing composite data. Introduced to support Bigstore
    /// composite objects. For details, visit http://go/bigstore-composites.</summary>
    public class GdataCompositeMedia : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte
        /// representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For
        /// now, any v2 blob will also be represented in this field as v1 BlobRef.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobRef")]
        public virtual string BlobRef { get; set; } 

        /// <summary>Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobstore2Info")]
        public virtual GdataBlobstore2Info Blobstore2Info { get; set; } 

        /// <summary>A binary data reference for a media download. Serves as a technology-agnostic binary reference in
        /// some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as
        /// bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support
        /// JavaScript. This prevents us from including the actual type of this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cosmoBinaryReference")]
        public virtual string CosmoBinaryReference { get; set; } 

        /// <summary>crc32.c hash for the payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crc32cHash")]
        public virtual System.Nullable<long> Crc32cHash { get; set; } 

        /// <summary>Media data, set if reference_type is INLINE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inline")]
        public virtual string Inline { get; set; } 

        /// <summary>Size of the data, in bytes</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("length")]
        public virtual System.Nullable<long> Length { get; set; } 

        /// <summary>MD5 hash for the payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("md5Hash")]
        public virtual string Md5Hash { get; set; } 

        /// <summary>Reference to a TI Blob, set if reference_type is BIGSTORE_REF.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual GdataObjectId ObjectId { get; set; } 

        /// <summary>Path to the data, set if reference_type is PATH</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>Describes what the field reference contains.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceType")]
        public virtual string ReferenceType { get; set; } 

        /// <summary>SHA-1 hash for the payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha1Hash")]
        public virtual string Sha1Hash { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Detailed Content-Type information from Scotty. The Content-Type of the media will typically be filled
    /// in by the header or Scotty's best_guess, but this extended information provides the backend with more
    /// information so that it can make a better decision if needed. This is only used on media upload requests from
    /// Scotty.</summary>
    public class GdataContentTypeInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Scotty's best guess of what the content type of the file is.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bestGuess")]
        public virtual string BestGuess { get; set; } 

        /// <summary>The content type of the file derived by looking at specific bytes (i.e. "magic bytes") of the
        /// actual file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fromBytes")]
        public virtual string FromBytes { get; set; } 

        /// <summary>The content type of the file derived from the file extension of the original file name used by the
        /// client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fromFileName")]
        public virtual string FromFileName { get; set; } 

        /// <summary>The content type of the file as specified in the request headers, multipart headers, or RUPIO start
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fromHeader")]
        public virtual string FromHeader { get; set; } 

        /// <summary>The content type of the file derived from the file extension of the URL path. The URL path is
        /// assumed to represent a file name (which is typically only true for agents that are providing a REST
        /// API).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fromUrlPath")]
        public virtual string FromUrlPath { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Backend response for a Diff get checksums response. For details on the Scotty Diff protocol, visit
    /// http://go/scotty-diff-protocol.</summary>
    public class GdataDiffChecksumsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Exactly one of these fields must be populated. If checksums_location is filled, the server will
        /// return the corresponding contents to the user. If object_location is filled, the server will calculate the
        /// checksums based on the content there and return that to the user. For details on the format of the
        /// checksums, see http://go/scotty-diff-protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checksumsLocation")]
        public virtual GdataCompositeMedia ChecksumsLocation { get; set; } 

        /// <summary>The chunk size of checksums. Must be a multiple of 256KB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSizeBytes")]
        public virtual System.Nullable<long> ChunkSizeBytes { get; set; } 

        /// <summary>If set, calculate the checksums based on the contents and return them to the caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectLocation")]
        public virtual GdataCompositeMedia ObjectLocation { get; set; } 

        /// <summary>The total size of the server object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectSizeBytes")]
        public virtual System.Nullable<long> ObjectSizeBytes { get; set; } 

        /// <summary>The object version of the object the checksums are being returned for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectVersion")]
        public virtual string ObjectVersion { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Backend response for a Diff download response. For details on the Scotty Diff protocol, visit
    /// http://go/scotty-diff-protocol.</summary>
    public class GdataDiffDownloadResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The original object location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectLocation")]
        public virtual GdataCompositeMedia ObjectLocation { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-
    /// protocol.</summary>
    public class GdataDiffUploadRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The location of the checksums for the new object. Agents must clone the object located here, as the
        /// upload server will delete the contents once a response is received. For details on the format of the
        /// checksums, see http://go/scotty-diff-protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checksumsInfo")]
        public virtual GdataCompositeMedia ChecksumsInfo { get; set; } 

        /// <summary>The location of the new object. Agents must clone the object located here, as the upload server
        /// will delete the contents once a response is received.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectInfo")]
        public virtual GdataCompositeMedia ObjectInfo { get; set; } 

        /// <summary>The object version of the object that is the base version the incoming diff script will be applied
        /// to. This field will always be filled in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectVersion")]
        public virtual string ObjectVersion { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Backend response for a Diff upload request. For details on the Scotty Diff protocol, visit
    /// http://go/scotty-diff-protocol.</summary>
    public class GdataDiffUploadResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The object version of the object at the server. Must be included in the end notification response.
        /// The version in the end notification response must correspond to the new version of the object that is now
        /// stored at the server, after the upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectVersion")]
        public virtual string ObjectVersion { get; set; } 

        /// <summary>The location of the original file for a diff upload request. Must be filled in if responding to an
        /// upload start notification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalObject")]
        public virtual GdataCompositeMedia OriginalObject { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Backend response for a Diff get version response. For details on the Scotty Diff protocol, visit
    /// http://go/scotty-diff-protocol.</summary>
    public class GdataDiffVersionResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total size of the server object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectSizeBytes")]
        public virtual System.Nullable<long> ObjectSizeBytes { get; set; } 

        /// <summary>The version of the object stored at the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectVersion")]
        public virtual string ObjectVersion { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Parameters specific to media downloads.</summary>
    public class GdataDownloadParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A boolean to be returned in the response to Scotty. Allows/disallows gzip encoding of the payload
        /// content when the server thinks it's advantageous (hence, does not guarantee compression) which allows Scotty
        /// to GZip the response to the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowGzipCompression")]
        public virtual System.Nullable<bool> AllowGzipCompression { get; set; } 

        /// <summary>Determining whether or not Apiary should skip the inclusion of any Content-Range header on its
        /// response to Scotty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreRange")]
        public virtual System.Nullable<bool> IgnoreRange { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reference to data stored on the filesystem, on GFS or in blobstore.</summary>
    public class GdataMedia : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deprecated, use one of explicit hash type fields instead. Algorithm used for calculating the hash.
        /// As of 2011/01/21, "MD5" is the only possible value for this field. New values may be added at any
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("algorithm")]
        public virtual string Algorithm { get; set; } 

        /// <summary>Use object_id instead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigstoreObjectRef")]
        public virtual string BigstoreObjectRef { get; set; } 

        /// <summary>Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte
        /// representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For
        /// now, any v2 blob will also be represented in this field as v1 BlobRef.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobRef")]
        public virtual string BlobRef { get; set; } 

        /// <summary>Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobstore2Info")]
        public virtual GdataBlobstore2Info Blobstore2Info { get; set; } 

        /// <summary>A composite media composed of one or more media objects, set if reference_type is COMPOSITE_MEDIA.
        /// The media length field must be set to the sum of the lengths of all composite media objects. Note: All
        /// composite media must have length specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compositeMedia")]
        public virtual System.Collections.Generic.IList<GdataCompositeMedia> CompositeMedia { get; set; } 

        /// <summary>MIME type of the data</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; } 

        /// <summary>Extended content type information provided for Scotty uploads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentTypeInfo")]
        public virtual GdataContentTypeInfo ContentTypeInfo { get; set; } 

        /// <summary>A binary data reference for a media download. Serves as a technology-agnostic binary reference in
        /// some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as
        /// bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support
        /// JavaScript. This prevents us from including the actual type of this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cosmoBinaryReference")]
        public virtual string CosmoBinaryReference { get; set; } 

        /// <summary>For Scotty Uploads: Scotty-provided hashes for uploads For Scotty Downloads: (WARNING: DO NOT USE
        /// WITHOUT PERMISSION FROM THE SCOTTY TEAM.) A Hash provided by the agent to be used to verify the data being
        /// downloaded. Currently only supported for inline payloads. Further, only crc32c_hash is currently
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crc32cHash")]
        public virtual System.Nullable<long> Crc32cHash { get; set; } 

        /// <summary>Set if reference_type is DIFF_CHECKSUMS_RESPONSE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffChecksumsResponse")]
        public virtual GdataDiffChecksumsResponse DiffChecksumsResponse { get; set; } 

        /// <summary>Set if reference_type is DIFF_DOWNLOAD_RESPONSE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffDownloadResponse")]
        public virtual GdataDiffDownloadResponse DiffDownloadResponse { get; set; } 

        /// <summary>Set if reference_type is DIFF_UPLOAD_REQUEST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffUploadRequest")]
        public virtual GdataDiffUploadRequest DiffUploadRequest { get; set; } 

        /// <summary>Set if reference_type is DIFF_UPLOAD_RESPONSE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffUploadResponse")]
        public virtual GdataDiffUploadResponse DiffUploadResponse { get; set; } 

        /// <summary>Set if reference_type is DIFF_VERSION_RESPONSE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffVersionResponse")]
        public virtual GdataDiffVersionResponse DiffVersionResponse { get; set; } 

        /// <summary>Parameters for a media download.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("downloadParameters")]
        public virtual GdataDownloadParameters DownloadParameters { get; set; } 

        /// <summary>Original file name</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filename")]
        public virtual string Filename { get; set; } 

        /// <summary>Deprecated, use one of explicit hash type fields instead. These two hash related fields will only
        /// be populated on Scotty based media uploads and will contain the content of the hash group in the
        /// NotificationRequest: http://cs/#google3/uploader/service/proto/upload_listener.proto&q=class:Hash Hex
        /// encoded hash value of the uploaded media.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hash")]
        public virtual string Hash { get; set; } 

        /// <summary>For Scotty uploads only. If a user sends a hash code and the backend has requested that Scotty
        /// verify the upload against the client hash, Scotty will perform the check on behalf of the backend and will
        /// reject it if the hashes don't match. This is set to true if Scotty performed this verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashVerified")]
        public virtual System.Nullable<bool> HashVerified { get; set; } 

        /// <summary>Media data, set if reference_type is INLINE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inline")]
        public virtual string Inline { get; set; } 

        /// <summary>|is_potential_retry| is set false only when Scotty is certain that it has not sent the request
        /// before. When a client resumes an upload, this field must be set true in agent calls, because Scotty cannot
        /// be certain that it has never sent the request before due to potential failure in the session state
        /// persistence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isPotentialRetry")]
        public virtual System.Nullable<bool> IsPotentialRetry { get; set; } 

        /// <summary>Size of the data, in bytes</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("length")]
        public virtual System.Nullable<long> Length { get; set; } 

        /// <summary>Scotty-provided MD5 hash for an upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("md5Hash")]
        public virtual string Md5Hash { get; set; } 

        /// <summary>Media id to forward to the operation GetMedia. Can be set if reference_type is GET_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaId")]
        public virtual string MediaId { get; set; } 

        /// <summary>Reference to a TI Blob, set if reference_type is BIGSTORE_REF.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual GdataObjectId ObjectId { get; set; } 

        /// <summary>Path to the data, set if reference_type is PATH</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>Describes what the field reference contains.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceType")]
        public virtual string ReferenceType { get; set; } 

        /// <summary>Scotty-provided SHA1 hash for an upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha1Hash")]
        public virtual string Sha1Hash { get; set; } 

        /// <summary>Scotty-provided SHA256 hash for an upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha256Hash")]
        public virtual string Sha256Hash { get; set; } 

        /// <summary>Time at which the media data was last updated, in milliseconds since UNIX epoch</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timestamp")]
        public virtual System.Nullable<ulong> Timestamp { get; set; } 

        /// <summary>A unique fingerprint/version id for the media data</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("token")]
        public virtual string Token { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive
    /// closure issues with JavaScript support; see http://b/8801763.</summary>
    public class GdataObjectId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the bucket to which this object belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketName")]
        public virtual string BucketName { get; set; } 

        /// <summary>Generation of the object. Generations are monotonically increasing across writes, allowing them to
        /// be be compared to determine which generation is newer. If this is omitted in a request, then you are
        /// requesting the live object. See http://go/bigstore-versions</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generation")]
        public virtual System.Nullable<long> Generation { get; set; } 

        /// <summary>The name of the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectName")]
        public virtual string ObjectName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to
    /// represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the
    /// WGS84 standard. Values must be within normalized ranges.</summary>
    public class LatLng : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The latitude in degrees. It must be in the range [-90.0, +90.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; } 

        /// <summary>The longitude in degrees. It must be in the range [-180.0, +180.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A line item in a payment request.</summary>
    public class LineItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The amount of the line item. SECONDARY line items may have a negative amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("amount")]
        public virtual Money Amount { get; set; } 

        /// <summary>The text for a line item. For example, "Total due".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>(Optional) Text that is displayed in a smaller font below the line item label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subText")]
        public virtual string SubText { get; set; } 

        /// <summary>The line item type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A media file within a rich card.</summary>
    public class Media : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Information about a file, including the URL of the file and the URL of the fileâ€™s thumbnail. The
        /// RBM platform serves content from a cache, but an agent can force the RBM platform to fetch a new version of
        /// the content and refresh the cache.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentInfo")]
        public virtual ContentInfo ContentInfo { get; set; } 

        /// <summary>The unique name of the file, returned by the RBM platform when the file was uploaded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The height of the media within a rich card with a vertical layout. For a standalone card with
        /// horizontal layout, height is not customizable, and this field is ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual string Height { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Extra information added to operations that support Scotty media requests.</summary>
    public class MediaRequestInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of current bytes uploaded or downloaded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentBytes")]
        public virtual System.Nullable<long> CurrentBytes { get; set; } 

        /// <summary>Data to be copied to backend requests. Custom data is returned to Scotty in the agent_state field,
        /// which Scotty will then provide in subsequent upload notifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customData")]
        public virtual string CustomData { get; set; } 

        /// <summary>Set if the http request info is diff encoded. The value of this field is the version number of the
        /// base revision. This is corresponding to Apiary's mediaDiffObjectVersion
        /// (//depot/google3/java/com/google/api/server/media/variable/DiffObjectVersionVariable.java). See go/esf-
        /// scotty-diff-upload for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffObjectVersion")]
        public virtual string DiffObjectVersion { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("finalStatus")]
        public virtual System.Nullable<int> FinalStatus { get; set; } 

        /// <summary>The type of notification received from Scotty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationType")]
        public virtual string NotificationType { get; set; } 

        /// <summary>The Scotty request ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; } 

        /// <summary>The total size of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalBytes")]
        public virtual System.Nullable<long> TotalBytes { get; set; } 

        /// <summary>Whether the total bytes field contains an estimated data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalBytesIsEstimated")]
        public virtual System.Nullable<bool> TotalBytesIsEstimated { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Supported payment methods.</summary>
    public class Method : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The countries that the payment request is valid in, as ISO-2 country codes. For example, `["US",
        /// "MX"]`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowedCountryCodes")]
        public virtual System.Collections.Generic.IList<string> AllowedCountryCodes { get; set; } 

        /// <summary>The billing address format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingAddressFormat")]
        public virtual string BillingAddressFormat { get; set; } 

        /// <summary>Whether or not the user must provide a billing address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingAddressRequired")]
        public virtual System.Nullable<bool> BillingAddressRequired { get; set; } 

        /// <summary>The merchant ID for the supported payment method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantId")]
        public virtual string MerchantId { get; set; } 

        /// <summary>The merchant name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantName")]
        public virtual string MerchantName { get; set; } 

        /// <summary>The payment method name. You must set this field to `"https://paywith.google.com/pay"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentMethod")]
        public virtual string PaymentMethod { get; set; } 

        /// <summary>The supported card networks. For example, `["MASTERCARD", "VISA", "DISCOVER"]`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportedCardNetworks")]
        public virtual System.Collections.Generic.IList<string> SupportedCardNetworks { get; set; } 

        /// <summary>The supported card types. For example, `["CARD", "TOKENIZED_CARD"]`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportedCardTypes")]
        public virtual System.Collections.Generic.IList<string> SupportedCardTypes { get; set; } 

        /// <summary>Tokenization information for the payment request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tokenizationData")]
        public virtual TokenizationData TokenizationData { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an amount of money with its currency type.</summary>
    public class Money : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The three-letter currency code defined in ISO 4217.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; } 

        /// <summary>Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999
        /// inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be
        /// positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is
        /// represented as `units`=-1 and `nanos`=-750,000,000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; } 

        /// <summary>The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US
        /// dollar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default web browser app to the specified URL. If the user has an app installed that is
    /// registered as the default handler for the URL, then this app will be opened instead, and its icon will be used
    /// in the suggested action UI.</summary>
    public class OpenUrlAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URL</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Payment request action.</summary>
    public class PaymentRequestAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Text that replaces the payment request text when the transaction is complete.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completedMessage")]
        public virtual string CompletedMessage { get; set; } 

        /// <summary>(Optional) A timestamp of when the payment request expires. If a payment request expires, the
        /// request becomes invalid. If you specify a timestamp, the RCS-enabled messaging app doesn't verify an
        /// expiration time with the RBM agent. If you don't specify a timestamp, the payment request only expires if
        /// the agent flags the request as expired via the experation check webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expireTime")]
        public virtual object ExpireTime { get; set; } 

        /// <summary>Text that replaces the payment request text when the request is expired.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expiredMessage")]
        public virtual string ExpiredMessage { get; set; } 

        /// <summary>Payment request line items, including regular items, taxes, sub-total, and shipping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<LineItem> Items { get; set; } 

        /// <summary>Supported payment methods.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentMethods")]
        public virtual System.Collections.Generic.IList<Method> PaymentMethods { get; set; } 

        /// <summary>The agent-assigned ID of the payment request. This may be a UUID, as defined in
        /// https://tools.ietf.org/html/rfc4122.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating a payment request. The field
        /// resolves to a checksum the RBM platform uses to validate the payment request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signature")]
        public virtual string Signature { get; set; } 

        /// <summary>The total amount of the payment request. The value must be positive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("total")]
        public virtual LineItem Total { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for RBMService.RequestCapabilityCallback method.</summary>
    public class RequestCapabilityCallbackRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the request, assigned by the agent. This must be a UUID, as defined in
        /// https://tools.ietf.org/html/rfc4122. This request ID is included in the capability callback, which returns
        /// asynchronously.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A standalone rich card or a carousel of rich cards sent from the agent to the user.</summary>
    public class RichCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Carousel of cards.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carouselCard")]
        public virtual CarouselCard CarouselCard { get; set; } 

        /// <summary>Standalone card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("standaloneCard")]
        public virtual StandaloneCard StandaloneCard { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the RCS app's location chooser so the user can pick a location to send back to the
    /// agent.</summary>
    public class ShareLocationAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Standalone card</summary>
    public class StandaloneCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Card content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContent")]
        public virtual CardContent CardContent { get; set; } 

        /// <summary>Orientation of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardOrientation")]
        public virtual string CardOrientation { get; set; } 

        /// <summary>Image preview alignment for standalone cards with horizontal layout.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailImageAlignment")]
        public virtual string ThumbnailImageAlignment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>When tapped, initiates the corresponding native action on the device.</summary>
    public class SuggestedAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Opens the user's default calendar app and starts the new calendar event flow with the agent-
        /// specified event data pre-filled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createCalendarEventAction")]
        public virtual CreateCalendarEventAction CreateCalendarEventAction { get; set; } 

        /// <summary>Opens the user's default dialer app with the agent-specified phone number filled in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialAction")]
        public virtual DialAction DialAction { get; set; } 

        /// <summary>(Optional) Fallback URL to use if a client doesn't support a suggested action. Fallback URLs open
        /// in new browser windows.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fallbackUrl")]
        public virtual string FallbackUrl { get; set; } 

        /// <summary>Opens the user's default web browser app to the given URL. If the user has an app installed that is
        /// registered as the default handler for the URL, then this app will be opened instead, and its icon will be
        /// used in the suggested action UI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUrlAction")]
        public virtual OpenUrlAction OpenUrlAction { get; set; } 

        /// <summary>Sends a payment request from the agent to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentRequestAction")]
        public virtual PaymentRequestAction PaymentRequestAction { get; set; } 

        /// <summary>Payload (base64 encoded) that will be sent to the agent in the user event that results when the
        /// user taps the suggested action</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; } 

        /// <summary>Opens the RCS app's location chooser so the user can pick a location to send to the
        /// agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shareLocationAction")]
        public virtual ShareLocationAction ShareLocationAction { get; set; } 

        /// <summary>Text that is shown in the suggested action. Maximum 25 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>Opens the user's default map app and selects the agent-specified location or searches around the
        /// user's location given an agent-specified query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewLocationAction")]
        public virtual ViewLocationAction ViewLocationAction { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>When tapped, sends the text reply back to the agent.</summary>
    public class SuggestedReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The base64-encoded payload that the agent receives in a user event when the user taps the suggested
        /// reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; } 

        /// <summary>Text that is shown in the suggested reply and sent back to the agent when the user taps it. Maximum
        /// 25 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A suggested reply or a suggested action included within a rich card or within a suggestion chip
    /// list.</summary>
    public class Suggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Users can tap a suggested action to initiate the corresponding native action on the
        /// device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual SuggestedAction Action { get; set; } 

        /// <summary>Users can tap a suggested reply to send the text reply back to the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual SuggestedReply Reply { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A tester for the agent. The agent can interact with verified testers even if the agent has not yet
    /// launched.</summary>
    public class Tester : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status of the invitation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inviteStatus")]
        public virtual string InviteStatus { get; set; } 

        /// <summary>This field is set by the RBM platform. Do not include it when creating a tester object. The field
        /// resolves "phones/{E.164}/testers", where {E.164} is the tester's phone number in E.164 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Tokenization information for the payment request.</summary>
    public class TokenizationData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Tokenization parameters, such as the public key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,string> Parameters { get; set; } 

        /// <summary>The tokenization type for the payment processing provider.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tokenizationType")]
        public virtual string TokenizationType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default map app and selects the agent-specified location or searches around the user's
    /// location given an agent-specified query.</summary>
    public class ViewLocationAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>(Optional) The label of the pin dropped at lat_long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>(Optional) The latitude and longitude of the specified location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latLong")]
        public virtual LatLng LatLong { get; set; } 

        /// <summary>(Optional, only supported on Android Messages clients) Rather than specify a lat_long (and
        /// optionally, a label), the agent can instead specify a query string. For default map apps that support search
        /// functionality (including Google Maps), tapping this suggested action results in a location search centered
        /// around the user's current location. If the query is sufficiently specific, then agents can use it to select
        /// any location in the world. For instance, setting the query string to "Growing Tree Bank" will show all
        /// Growing Tree Bank locations in the user's vicinity. Setting the query string to "1600 Amphitheater Parkway,
        /// Mountain View, CA 94043" will select that specific address, regardless of the user's location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.RCSBusinessMessaging.v1
{
    /// <summary>The RCSBusinessMessaging Service.</summary>
    public class RCSBusinessMessagingService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public RCSBusinessMessagingService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public RCSBusinessMessagingService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            files = new FilesResource(this);
            phones = new PhonesResource(this);
            users = new UsersResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "rcsbusinessmessaging"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://rcsbusinessmessaging.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }





        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        private readonly PhonesResource phones;

        /// <summary>Gets the Phones resource.</summary>
        public virtual PhonesResource Phones
        {
            get { return phones; }
        }

        private readonly UsersResource users;

        /// <summary>Gets the Users resource.</summary>
        public virtual UsersResource Users
        {
            get { return users; }
        }
    }

    ///<summary>A base abstract class for RCSBusinessMessaging requests.</summary>
    public abstract class RCSBusinessMessagingBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new RCSBusinessMessagingBaseServiceRequest instance.</summary>
        protected RCSBusinessMessagingBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes RCSBusinessMessaging parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "files" collection of methods.</summary>
    public class FilesResource
    {
        private const string Resource = "files";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Uploads a file for use in media or rich card messages. The agent provides the URL or binary of the
        /// file and (optionally) the URL of the corresponding thumbnail file. The RBM platform caches the file for 60
        /// days and returns a unique name that you can use to identify the file when sending agent messages. To upload
        /// a file binary, make an HTTP POST request to the Upload URI, omit the `fileUrl` field from the JSON request
        /// body, and specify the binary as the POST request body. For example, use the `--upload-file` cURL flag with
        /// the fully qualified file path of the binary file.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Uploads a file for use in media or rich card messages. The agent provides the URL or binary of the
        /// file and (optionally) the URL of the corresponding thumbnail file. The RBM platform caches the file for 60
        /// days and returns a unique name that you can use to identify the file when sending agent messages. To upload
        /// a file binary, make an HTTP POST request to the Upload URI, omit the `fileUrl` field from the JSON request
        /// body, and specify the binary as the POST request body. For example, use the `--upload-file` cURL flag with
        /// the fully qualified file path of the binary file.</summary>
        public class CreateRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.File>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/files"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Uploads a file for use in media or rich card messages. The agent provides the URL or binary of the
        /// file and (optionally) the URL of the corresponding thumbnail file. The RBM platform caches the file for 60
        /// days and returns a unique name that you can use to identify the file when sending agent messages. To upload
        /// a file binary, make an HTTP POST request to the Upload URI, omit the `fileUrl` field from the JSON request
        /// body, and specify the binary as the POST request body. For example, use the `--upload-file` cURL flag with
        /// the fully qualified file path of the binary file.</summary>/// <param name="body">The body of the request.</param>
        /// <param name="stream">The stream to upload.</param>
        /// <param name="contentType">The content type of the stream to upload.</param>
        public virtual CreateMediaUpload Create(Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest body, System.IO.Stream stream, string contentType)
        {
            return new CreateMediaUpload(service, body, stream, contentType);
        }

        /// <summary>Create media upload which supports resumable upload.</summary>
        public class CreateMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest, Google.Apis.RCSBusinessMessaging.v1.Data.File>
        {

            /// <summary>V1 error format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

            /// <summary>V1 error format.</summary>
            public enum XgafvEnum
            {
                /// <summary>v1 error format</summary>
                [Google.Apis.Util.StringValueAttribute("1")]
                Value1,
                /// <summary>v2 error format</summary>
                [Google.Apis.Util.StringValueAttribute("2")]
                Value2,
            }

            /// <summary>OAuth access token.</summary>
            [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AccessToken { get; set; }

            /// <summary>Data format for response.</summary>
            /// [default: json]
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AltEnum> Alt { get; set; }

            /// <summary>Data format for response.</summary>
            public enum AltEnum
            {
                /// <summary>Responses with Content-Type of application/json</summary>
                [Google.Apis.Util.StringValueAttribute("json")]
                Json,
                /// <summary>Media download with context-dependent Content-Type</summary>
                [Google.Apis.Util.StringValueAttribute("media")]
                Media,
                /// <summary>Responses with Content-Type of application/x-protobuf</summary>
                [Google.Apis.Util.StringValueAttribute("proto")]
                Proto,
            }

            /// <summary>JSONP</summary>
            [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Callback { get; set; }

            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields { get; set; }

            /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and
            /// reports. Required unless you provide an OAuth 2.0 token.</summary>
            [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Key { get; set; }

            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OauthToken { get; set; }

            /// <summary>Returns response with indentations and line breaks.</summary>
            /// [default: true]
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint { get; set; }

            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
            /// assigned to a user, but should not exceed 40 characters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser { get; set; }

            /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
            [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UploadType { get; set; }

            /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
            [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UploadProtocol { get; set; }


            /// <summary>Constructs a new Create media upload instance.</summary>
            public CreateMediaUpload(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.CreateFileRequest body, System.IO.Stream stream, string contentType)
                : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "v1/files"), "POST", stream, contentType)
            {
                Body = body;
            }
        }
    }

    /// <summary>The "phones" collection of methods.</summary>
    public class PhonesResource
    {
        private const string Resource = "phones";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PhonesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            agentEvents = new AgentEventsResource(service);
            agentMessages = new AgentMessagesResource(service);
            capability = new CapabilityResource(service);
            dialogflowMessages = new DialogflowMessagesResource(service);
            testers = new TestersResource(service);

        }

        private readonly AgentEventsResource agentEvents;

        /// <summary>Gets the AgentEvents resource.</summary>
        public virtual AgentEventsResource AgentEvents
        {
            get { return agentEvents; }
        }

        /// <summary>The "agentEvents" collection of methods.</summary>
        public class AgentEventsResource
        {
            private const string Resource = "agentEvents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AgentEventsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Sends an event from the agent to a user. Agent events can be used to indicate that the agent
            /// has read a message from the user or that the agent is in the process of typing (which adds a human
            /// element to the RBM experience). If RBM can't reach the user, the RBM platform returns `404 NOT_FOUND`.
            /// Unlike agent messages, agent events cannot be revoked after sending.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example, for a
            /// user with the US phone number +1-222-333-4444, the value would be phones/+12223334444, and the resulting endpoint
            /// would be https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentEvents.</param>
            public virtual CreateRequest Create(Google.Apis.RCSBusinessMessaging.v1.Data.AgentEvent body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Sends an event from the agent to a user. Agent events can be used to indicate that the agent
            /// has read a message from the user or that the agent is in the process of typing (which adds a human
            /// element to the RBM experience). If RBM can't reach the user, the RBM platform returns `404 NOT_FOUND`.
            /// Unlike agent messages, agent events cannot be revoked after sending.</summary>
            public class CreateRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.AgentEvent>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.AgentEvent body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example,
                /// for a user with the US phone number +1-222-333-4444, the value would be phones/+12223334444, and the
                /// resulting endpoint would be
                /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentEvents.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>The ID of the event, assigned by the agent. This must be a UUID, as defined in
                /// https://tools.ietf.org/html/rfc4122. The RBM platform ignores any agent message sent with an ID that
                /// was used by an earlier message or event sent from the same agent.</summary>
                [Google.Apis.Util.RequestParameterAttribute("eventId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string EventId { get; set; }

                /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
                [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string AgentId { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.RCSBusinessMessaging.v1.Data.AgentEvent Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/agentEvents"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+$",
                        });
                    RequestParameters.Add(
                        "eventId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "eventId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "agentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "agentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly AgentMessagesResource agentMessages;

        /// <summary>Gets the AgentMessages resource.</summary>
        public virtual AgentMessagesResource AgentMessages
        {
            get { return agentMessages; }
        }

        /// <summary>The "agentMessages" collection of methods.</summary>
        public class AgentMessagesResource
        {
            private const string Resource = "agentMessages";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AgentMessagesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Sends a message from the agent to a user. The user must be RCS enabled and reachable by the RBM
            /// platform in order for the agent to successfully send a message. When the message has been successfully
            /// sent, the call returns with no error. Otherwise, the agent receives an error code. If the user is
            /// online, the RBM platform delivers the message right away. Otherwise, the RBM platform queues the message
            /// and delivered it when the user is next online. The RBM platform ignores any agent message sent with an
            /// ID that was used by an earlier message or event sent from the same agent. Agent messages can be revoked
            /// between the time that they are sent and the time that they are delivered.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example, with
            /// the US phone number +1-222-333-4444, the value would be phones/+12223334444, and the resulting endpoint would be
            /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentMessages.</param>
            public virtual CreateRequest Create(Google.Apis.RCSBusinessMessaging.v1.Data.AgentMessage body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Sends a message from the agent to a user. The user must be RCS enabled and reachable by the RBM
            /// platform in order for the agent to successfully send a message. When the message has been successfully
            /// sent, the call returns with no error. Otherwise, the agent receives an error code. If the user is
            /// online, the RBM platform delivers the message right away. Otherwise, the RBM platform queues the message
            /// and delivered it when the user is next online. The RBM platform ignores any agent message sent with an
            /// ID that was used by an earlier message or event sent from the same agent. Agent messages can be revoked
            /// between the time that they are sent and the time that they are delivered.</summary>
            public class CreateRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.AgentMessage>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.AgentMessage body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example,
                /// with the US phone number +1-222-333-4444, the value would be phones/+12223334444, and the resulting
                /// endpoint would be
                /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentMessages.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>The unique ID of the message, assigned by the agent. This must be a UUID, as defined in
                /// https://tools.ietf.org/html/rfc4122. The RBM platform ignores any agent message sent with an ID that
                /// was used by an earlier message or event sent from the same agent.</summary>
                [Google.Apis.Util.RequestParameterAttribute("messageId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string MessageId { get; set; }

                /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
                [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string AgentId { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.RCSBusinessMessaging.v1.Data.AgentMessage Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/agentMessages"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+$",
                        });
                    RequestParameters.Add(
                        "messageId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "messageId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "agentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "agentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Revokes an agent message that has been sent but not yet delivered. If the RBM platform
            /// successfully revokes a message, then the message is deleted from the userâ€™s message queue and is never
            /// delivered. This method immediately returns 200 OK, whether or not the message was successfully revoked.
            /// There is a small chance that the agent may initiate a revocation while the RBM platform is in the
            /// process of delivering the message. In these rare cases, the agent receives a DELIVERED user event for
            /// the message shortly after initiating the revocation request.</summary>
            /// <param name="name">"phones/{E.164}/agentMessages/{messageId}", where {E.164} is the user's phone number in E.164
            /// format and {messageId} is the agent-assigned ID of the agent message that should be revoked. For example, with the
            /// US phone number +1-222-333-4444 and an agent message with the ID "12345xyz", the resulting endpoint would be
            /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentMessages/12345xyz.</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Revokes an agent message that has been sent but not yet delivered. If the RBM platform
            /// successfully revokes a message, then the message is deleted from the userâ€™s message queue and is never
            /// delivered. This method immediately returns 200 OK, whether or not the message was successfully revoked.
            /// There is a small chance that the agent may initiate a revocation while the RBM platform is in the
            /// process of delivering the message. In these rare cases, the agent receives a DELIVERED user event for
            /// the message shortly after initiating the revocation request.</summary>
            public class DeleteRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}/agentMessages/{messageId}", where {E.164} is the user's phone number in
                /// E.164 format and {messageId} is the agent-assigned ID of the agent message that should be revoked.
                /// For example, with the US phone number +1-222-333-4444 and an agent message with the ID "12345xyz",
                /// the resulting endpoint would be
                /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/agentMessages/12345xyz.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
                [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string AgentId { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+/agentMessages/[^/]+$",
                        });
                    RequestParameters.Add(
                        "agentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "agentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly CapabilityResource capability;

        /// <summary>Gets the Capability resource.</summary>
        public virtual CapabilityResource Capability
        {
            get { return capability; }
        }

        /// <summary>The "capability" collection of methods.</summary>
        public class CapabilityResource
        {
            private const string Resource = "capability";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public CapabilityResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Requests a callback containing the capabilities of a user. Following this request, the agent
            /// receives an asynchronous callback with the user's capabilities.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">"phones/{E.164}/capability", where {E.164} is the user's phone number in E.164 format. For
            /// example, with the US phone number +1-222-333-4444, the resulting endpoint would be
            /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/capability:requestCapabilityCallback</param>
            public virtual RequestCapabilityCallbackRequest RequestCapabilityCallback(Google.Apis.RCSBusinessMessaging.v1.Data.RequestCapabilityCallbackRequest body, string name)
            {
                return new RequestCapabilityCallbackRequest(service, body, name);
            }

            /// <summary>Requests a callback containing the capabilities of a user. Following this request, the agent
            /// receives an asynchronous callback with the user's capabilities.</summary>
            public class RequestCapabilityCallbackRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.Empty>
            {
                /// <summary>Constructs a new RequestCapabilityCallback request.</summary>
                public RequestCapabilityCallbackRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.RequestCapabilityCallbackRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}/capability", where {E.164} is the user's phone number in E.164 format. For
                /// example, with the US phone number +1-222-333-4444, the resulting endpoint would be https://rcsbusine
                /// ssmessaging.googleapis.com/v1/phones/+12223334444/capability:requestCapabilityCallback</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.RCSBusinessMessaging.v1.Data.RequestCapabilityCallbackRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "requestCapabilityCallback"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}/capability:requestCapabilityCallback"; }
                }

                /// <summary>Initializes RequestCapabilityCallback parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+$",
                        });
                }

            }
        }
        private readonly DialogflowMessagesResource dialogflowMessages;

        /// <summary>Gets the DialogflowMessages resource.</summary>
        public virtual DialogflowMessagesResource DialogflowMessages
        {
            get { return dialogflowMessages; }
        }

        /// <summary>The "dialogflowMessages" collection of methods.</summary>
        public class DialogflowMessagesResource
        {
            private const string Resource = "dialogflowMessages";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public DialogflowMessagesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Prompts a Dialogflow agent to send messages through an RBM agent. If Dialogflow integration
            /// isn't enabled for an RBM agent, this method returns `403 PERMISSION_DENIED`. When an RBM agent is
            /// integrated with a Dialogflow agent, this method triggers an event in the Dialogflow agent. The RBM
            /// Platform routes responses from Dialogflow to the user's device and routes messages from the user back to
            /// the Dialogflow agent. If a Dialogflow intent defines multiple responses, the RBM Platform sends users
            /// one message per defined response. If you contact a webhook with Dialogflow fulfillment, the fulfillment
            /// request includes the following information in the payload: Field Description rbm_user_phone_number The
            /// user's phone number. rbm_share_location_response The user's location, if they tapped the share location
            /// suggested action. </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">"phones/{E.164}", where {E.164} is the user's phone number</param>
            public virtual CreateRequest Create(Google.Apis.RCSBusinessMessaging.v1.Data.DialogflowEvent body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Prompts a Dialogflow agent to send messages through an RBM agent. If Dialogflow integration
            /// isn't enabled for an RBM agent, this method returns `403 PERMISSION_DENIED`. When an RBM agent is
            /// integrated with a Dialogflow agent, this method triggers an event in the Dialogflow agent. The RBM
            /// Platform routes responses from Dialogflow to the user's device and routes messages from the user back to
            /// the Dialogflow agent. If a Dialogflow intent defines multiple responses, the RBM Platform sends users
            /// one message per defined response. If you contact a webhook with Dialogflow fulfillment, the fulfillment
            /// request includes the following information in the payload: Field Description rbm_user_phone_number The
            /// user's phone number. rbm_share_location_response The user's location, if they tapped the share location
            /// suggested action. </summary>
            public class CreateRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.DialogflowEvent>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.DialogflowEvent body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}", where {E.164} is the user's phone number</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>A unique prefix of RBM message IDs that result from the Dialogflow event. Dialogflow
                /// supports multiple responses for a given event. If an event triggers multiple responses, RBM forwards
                /// each response as a separate message. Each message ID shares the same prefix.</summary>
                [Google.Apis.Util.RequestParameterAttribute("messageIdPrefix", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string MessageIdPrefix { get; set; }

                /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
                [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string AgentId { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.RCSBusinessMessaging.v1.Data.DialogflowEvent Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/dialogflowMessages"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+$",
                        });
                    RequestParameters.Add(
                        "messageIdPrefix", new Google.Apis.Discovery.Parameter
                        {
                            Name = "messageIdPrefix",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "agentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "agentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly TestersResource testers;

        /// <summary>Gets the Testers resource.</summary>
        public virtual TestersResource Testers
        {
            get { return testers; }
        }

        /// <summary>The "testers" collection of methods.</summary>
        public class TestersResource
        {
            private const string Resource = "testers";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public TestersResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Invites a user to test an agent. The invited user must be RCS-enabled and reachable by the RBM
            /// platform. When an agent invites a user to become a tester, an RBM platform management agent sends a
            /// message to the user asking for confirmation that she wants to be a tester of the agent. Once the user
            /// confirms, she becomes a tester. An agent that has not yet launched can only interact with users who are
            /// testers of that agent. If an unlaunched agent attempts to send a message, event, or capability callback
            /// to a non-tester, the RBM platform returns a `403 PERMISSION_DENIED` error. An agent can send 20 tester
            /// requests each day with a total maximum of 200 tester requests. If you send tester requests above those
            /// limits, the RBM platform returns a `429 RESOURCE_EXHAUSTED` response.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example, with
            /// the US phone number +1-222-333-4444, the resulting endpoint would be
            /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/testers/.</param>
            public virtual CreateRequest Create(Google.Apis.RCSBusinessMessaging.v1.Data.Tester body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Invites a user to test an agent. The invited user must be RCS-enabled and reachable by the RBM
            /// platform. When an agent invites a user to become a tester, an RBM platform management agent sends a
            /// message to the user asking for confirmation that she wants to be a tester of the agent. Once the user
            /// confirms, she becomes a tester. An agent that has not yet launched can only interact with users who are
            /// testers of that agent. If an unlaunched agent attempts to send a message, event, or capability callback
            /// to a non-tester, the RBM platform returns a `403 PERMISSION_DENIED` error. An agent can send 20 tester
            /// requests each day with a total maximum of 200 tester requests. If you send tester requests above those
            /// limits, the RBM platform returns a `429 RESOURCE_EXHAUSTED` response.</summary>
            public class CreateRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.Tester>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.Tester body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>"phones/{E.164}", where {E.164} is the user's phone number in E.164 format. For example,
                /// with the US phone number +1-222-333-4444, the resulting endpoint would be
                /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/testers/.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
                [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string AgentId { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.RCSBusinessMessaging.v1.Data.Tester Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/testers"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^phones/[^/]+$",
                        });
                    RequestParameters.Add(
                        "agentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "agentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Get the RBM-related capabilities of a user. The returned payload specifies whether a user can be
        /// reached with RBM and, if so, which RBM features the user supports. If the user can't be reached with RBM,
        /// the RBM platform returns `404 NOT_FOUND`. An agent that isn't launched can only request capabilities for
        /// users who are testers of that agent. If an unlaunched agent requests the capabilities of a non-tester, the
        /// RBM platform returns `403 PERMISSION_DENIED`.</summary>
        /// <param name="name">This field resolves to "phones/{E.164}/capabilities", where {E.164} is the user's phone number in
        /// E.164 format. For example, for a user with the US phone number +1-222-333-4444, the resulting endpoint is
        /// https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/capabilities.</param>
        public virtual GetCapabilitiesRequest GetCapabilities(string name)
        {
            return new GetCapabilitiesRequest(service, name);
        }

        /// <summary>Get the RBM-related capabilities of a user. The returned payload specifies whether a user can be
        /// reached with RBM and, if so, which RBM features the user supports. If the user can't be reached with RBM,
        /// the RBM platform returns `404 NOT_FOUND`. An agent that isn't launched can only request capabilities for
        /// users who are testers of that agent. If an unlaunched agent requests the capabilities of a non-tester, the
        /// RBM platform returns `403 PERMISSION_DENIED`.</summary>
        public class GetCapabilitiesRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.Capabilities>
        {
            /// <summary>Constructs a new GetCapabilities request.</summary>
            public GetCapabilitiesRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>This field resolves to "phones/{E.164}/capabilities", where {E.164} is the user's phone number
            /// in E.164 format. For example, for a user with the US phone number +1-222-333-4444, the resulting
            /// endpoint is https://rcsbusinessmessaging.googleapis.com/v1/phones/+12223334444/capabilities.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>The unique ID of the request, assigned by the agent. This must be a UUID, as defined in
            /// https://tools.ietf.org/html/rfc4122. If the request ID matches an ID that the agent used for a previous
            /// request, the RBM platform ignores the new request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestId { get; set; }

            /// <summary>Optional. The agent's unique identifier. Defined by RCS Business Messaging.</summary>
            [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AgentId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getCapabilities"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}/capabilities"; }
            }

            /// <summary>Initializes GetCapabilities parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^phones/[^/]+$",
                    });
                RequestParameters.Add(
                    "requestId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "agentId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "agentId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "users" collection of methods.</summary>
    public class UsersResource
    {
        private const string Resource = "users";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UsersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets the RCS-enabled phone numbers for a list of users. The returned payload contains a list of
        /// RCS-enabled phone numbers reachable by the RBM platform for the specified users. Only phone numbers that are
        /// RCS-enabled for a carrier the agent is launched on will be returned. The returned payload also contains
        /// values that can be used to estimate the potential reach of a list of phone numbers regardless of the launch
        /// status of the agent. Maximum 600 queries per minute (QPM).</summary>
        /// <param name="body">The body of the request.</param>
        public virtual BatchGetRequest BatchGet(Google.Apis.RCSBusinessMessaging.v1.Data.BatchGetUsersRequest body)
        {
            return new BatchGetRequest(service, body);
        }

        /// <summary>Gets the RCS-enabled phone numbers for a list of users. The returned payload contains a list of
        /// RCS-enabled phone numbers reachable by the RBM platform for the specified users. Only phone numbers that are
        /// RCS-enabled for a carrier the agent is launched on will be returned. The returned payload also contains
        /// values that can be used to estimate the potential reach of a list of phone numbers regardless of the launch
        /// status of the agent. Maximum 600 queries per minute (QPM).</summary>
        public class BatchGetRequest : RCSBusinessMessagingBaseServiceRequest<Google.Apis.RCSBusinessMessaging.v1.Data.BatchGetUsersResponse>
        {
            /// <summary>Constructs a new BatchGet request.</summary>
            public BatchGetRequest(Google.Apis.Services.IClientService service, Google.Apis.RCSBusinessMessaging.v1.Data.BatchGetUsersRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.RCSBusinessMessaging.v1.Data.BatchGetUsersRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "batchGet"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/users:batchGet"; }
            }

            /// <summary>Initializes BatchGet parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}
